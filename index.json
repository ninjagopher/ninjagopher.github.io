[{"content":"之前一直用 Hexo 作静态博客，发现生成速度确实有点感人，最近研究了一下常见的几个博客工具，最终选择了 Hugo，以下是具体的步骤\n本地部署 这里在 Fedora Linux 上搭建，其他操作系统的步骤也是差不多的\n首先使用内置的包管理器查看是否是最新版本（dnf 是 Fedora 内置的包管理器），是则通过dnf install hugo命令安装，否则到 GitHub 下载最新版本 Hugo（hugo_extended_withdeploy_x.xxx.x_linux-amd64.tar.gz）\ndnf info hugo # 或者：dnf repoquery hugo 我在 GitHub 下载的最新版，通过命令解压：\ntar -xzvf hugo_extended_withdeploy_0.xxx.0_linux-amd64.tar.gz 解压后把 hugo 这个文件移动到 /usr/local/bin 目录\nsudo mv hugo /usr/local/bin 查看 Hugo 版本：\nhugo version 创建本地博客、进入博客目录\nhugo new site \u0026lt;hugoblog\u0026gt; # 注意替换名字 cd \u0026lt;hugoblog\u0026gt; 安装主题\n在 Hugo Themes 找自己喜欢的主题，这里以 PaperMod 主题举例，通过submodule的方式安装：\n# 注意下面的4条命令都要在博客根目录下运行 git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod # needed when you reclone your repo (submodules may not get cloned automatically) git submodule update --init --recursive # update git submodule update --remote --merge 然后运行下面的命令应用主题\necho \u0026#34;theme = \u0026#39;PaperMod\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 新建一篇文章\nhugo new content ./content/posts/my-first-post.md 启动本地服务器（新建的文章默认是草稿，-D参数表示构建草稿内容）\nhugo server -D GitHub Actions 自动部署 创建一个 Public 仓库，仓库名为 \u0026lt;username\u0026gt;.github.io，创建的时候添加一个 README.md 文件（不添加的话仓库没有分支，会影响后面的工作流），把本地目录的 hugo.toml 这个文件的 baseURL 为 https://username.github.io/\n然后再创建一个 Private 仓库，可以命名为 hugo-source-code，不需要添加任何文件\n生成SHH密钥对（rsa）用于本地连接GitHub：\nssh-keygen -t rsa -b 4096 -C \u0026lt;username@example.com\u0026gt; 将.pub内容复制，来到GitHub的 Settings\u0026gt; SSH and GPG Keys，点击New SSH key，填写Title，Key type 默认Authenticaiton Key，粘贴到Key的区域，点击Add SSH key\n输入下面的命令测试连接：\nssh -T git@github.com 在 ~/.ssh 目录生成SSH密钥对（ed25519）：\ncd ~/.ssh/ ssh-keygen -t ed25519 -C \u0026#34;hugo-deploy-key\u0026#34; -f ./hugo_deploy_key -N \u0026#34;\u0026#34; 复制.pub公钥的内容，到 Public 仓库 Settings \u0026gt; Deploy keys，点击 Add deploy key，输入Title、Key，勾选“Allow write access”。 复制私钥的内容（没有扩展名的文件），到到 Private 仓库 Settings \u0026gt; Secrets and variables \u0026gt; Actions，点击 New repository secret，输入Name、Secret，将私钥的内容粘贴到 Secret 的区域（注意保留头尾两行，最后要有一行空行），点击 Add secret。\n回到本地 hugoblog 博客目录，新建一个 .gitignore 文件，根据情况添加内容：\n# Generated files by hugo /public/ /resources/_gen/ /assets/jsconfig.json hugo_stats.json hugo-wfl-edit.yaml # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # Temporary lock file while building /.hugo_build.lock # Others .DS_Store node_modules dist tmp 创建工作流文件：\nmkdir -p .github/workflows touch .github/workflows/hugo.yaml hugo.yaml 内容，注意替换自己的信息\nname: Deploy to Public Repo on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: # Checkout - name: Checkout private repo uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 # SSH - name: Setup SSH uses: webfactory/ssh-agent@v0.9.1 with: ssh-private-key: ${{ secrets.HUGO_DEPLOY_KEY }} # Install Hugo - name: Set up Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;0.145.0\u0026#34; # 填你的hugo版本 # Build the Hugo site - name: Build Hugo site run: hugo # Deploy to the public repo via SSH - name: Deploy to public repository run: | rm -rf deploy-repo git clone --single-branch --branch main git@github.com:\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io.git deploy-repo cd deploy-repo rm -rf * cp -r ../public/* . git config user.email \u0026#34;example@gmail.com\u0026#34; git config user.name \u0026#34;username\u0026#34; git add . git commit -m \u0026#34;Auto deploy Hugo site $(date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;)\u0026#34; git push origin main 配置用户名和邮箱、关联远程 Private 仓库，add commit push\n# 注意替换 git config user.email “example@gmail.com” git config user.name \u0026#34;username\u0026#34; # 查看配置 git config -l git remote add origin git@github.com:username/hugo-source-code.git git add . git commit -m \u0026#34;First commit\u0026#34; git push -u origin main 然后到Private 仓库的 Actions 界面看是否 run 成功\n参考 Hugo 官网\n","permalink":"https://ninjagopher.github.io/posts/hugo-create/","summary":"\u003cp\u003e之前一直用 Hexo 作静态博客，发现生成速度确实有点感人，最近研究了一下常见的几个博客工具，最终选择了 Hugo，以下是具体的步骤\u003c/p\u003e\n\u003ch3 id=\"本地部署\"\u003e本地部署\u003c/h3\u003e\n\u003cp\u003e这里在 Fedora Linux 上搭建，其他操作系统的步骤也是差不多的\u003c/p\u003e","title":"Hugo 博客搭建（2025）"},{"content":"参考 fcitx5，RIME，rime-ice\n安装 fcitx5 使用系统内置的包管理器安装（dnf 是 Fedora 内置的包管理器）：\nsudo dnf install fcitx5 fcitx5-chinese-addons fcitx5-configtool fcitx5-rime fcitx5-qt fcitx5-gtk 雾凇拼音 雾凇拼音——长期维护的简体词库\n# 创建文件夹 mkdir -p ~/.local/share/fcitx5/rime/ # 克隆雾凇拼音这个Rime配置到本地（我克隆到了 ~/Downloads/ 目录） git clone https://github.com/iDvel/rime-ice.git rime --depth 1 # 复制上面克隆到本地的文件夹内的所有文件到刚创建的文件夹 cp ~/Downloads/rime/* ~/.local/share/fcitx5/rime 小鹤双拼（可选） 我使用小鹤双拼方案，所以这里修改一下，用全拼的可以跳过这一步\n# 编辑default.yaml配置文件 vi ~/.local/share/fcitx5/rime/default.yaml # - schema: double_pinyin_flypy # 小鹤双拼 这行移动到schema_list的最前面 修改候选词数量 默认候选词数量是 5，有需要可以修改\n# 编辑default.yaml配置文件 vi ~/.local/share/fcitx5/rime/default.yaml # page_size: 5 改为你想要的数量 关闭候选词拼音注释 默认候选词会有拼音注释，比如：你好[ni hao]，编辑 double_pinyin_flypy.schema.yaml（编辑哪个文件看你使用什么方案），注释下面这两行就可以关闭\nspelling_hints: 8 always_show_comments: true 然后到 Fcitx5 Configuration 添加 Rime，调整字体大小为 16 或者更大，通过 GNOME Tweaks 设置开机启动，自带的英文键盘可以删除\n配置环境变量（可选） Fedora Workspace 41 没添加也能正常使用，如果需要可以添加到 ~/.bashrc 或者 ~/.profile\nexport GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx export INPUT_METHOD=fcitx 重新加载 重启整个 fcitx5 框架，如果没起作用可以重启或者重新登录\nfcitx5-remote -r ","permalink":"https://ninjagopher.github.io/posts/fedora-fcitx5/","summary":"\u003cp\u003e参考 \u003ca href=\"https://fcitx-im.org/wiki/Install_Fcitx_5/zh-cn\"\u003efcitx5\u003c/a\u003e，\u003ca href=\"https://rime.im/download/\"\u003eRIME\u003c/a\u003e，\u003ca href=\"https://github.com/iDvel/rime-ice\"\u003erime-ice\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"安装-fcitx5\"\u003e安装 fcitx5\u003c/h3\u003e\n\u003cp\u003e使用系统内置的包管理器安装（dnf 是 Fedora 内置的包管理器）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo dnf install fcitx5 fcitx5-chinese-addons fcitx5-configtool fcitx5-rime fcitx5-qt fcitx5-gtk\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"雾凇拼音\"\u003e雾凇拼音\u003c/h3\u003e\n\u003cp\u003e雾凇拼音——长期维护的简体词库\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 创建文件夹\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emkdir -p ~/.local/share/fcitx5/rime/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 克隆雾凇拼音这个Rime配置到本地（我克隆到了 ~/Downloads/ 目录）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone https://github.com/iDvel/rime-ice.git rime --depth \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 复制上面克隆到本地的文件夹内的所有文件到刚创建的文件夹\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecp ~/Downloads/rime/* ~/.local/share/fcitx5/rime\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"小鹤双拼可选\"\u003e小鹤双拼（可选）\u003c/h3\u003e\n\u003cp\u003e我使用小鹤双拼方案，所以这里修改一下，用全拼的可以跳过这一步\u003c/p\u003e","title":"Fedora 安装 fcitx5"},{"content":"ufawehfweahfgkawearfhiawtfgweatfgatgawergea\n","permalink":"https://ninjagopher.github.io/about/","summary":"about","title":"关于"}]